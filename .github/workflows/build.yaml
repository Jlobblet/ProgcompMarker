name: Build
on:
    push:
        tags:
            - "v*"

jobs:
    create_release:
        runs-on: ubuntu-latest
        steps:
        -   name: Create release
            id: create_release
            uses: actions/create-release@v1
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
                tag_name: ${{ github.ref }}
                release_name: ${{ github.ref }}
    build:
        needs: create_release
        strategy:
            matrix: 
                runtime:
                    - win-x64
                    - win-x86
                    - win-arm
                    - win-arm64
                    - linux-x64
                    - linux-musl-x64
                    - linux-arm
                    - linux-arm64
                    - osx-x64
        env:
            DOTNET_CLI_TELEMETRY_OPTOUT: 1
            DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Set up .NET SDK
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: "6.0.x"
            - name: Install dependencies
              run: dotnet restore
            - name: Build platform
              run: dotnet publish ProgcompCli/ProgcompCli.fsproj --configuration Release --no-restore --self-contained --runtime ${{ matrix.runtime }} --output "./build_output"
            - name: Zip binary
              id: zip_binary
              run: |
                cd "./build_output"
                tar cfJ "ProgcompCli-${{ matrix.runtime }}.tar.xz" *
                echo "::set-output name=binary_path::$(readlink -f "ProgcompCli-${{ matrix.runtime }}.tar.xz")"
            - name: Upload binary
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ needs.create_release.steps.create_release.outputs.upload_url }}
                asset_path: ${{ steps.zip_binary.outputs.binary_path }}
                asset_name: ProgcompCli-${{ matrix.runtime }}.tar.xz
                asset_content_type: application/zip
